// CheckoutController.cs

using System;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Stripe;
using YourProject.Dtos;

namespace YourProject.Controllers
{
    [ApiController]
    [Route("api/[controller]")]
    public class CheckoutController : ControllerBase
    {
        [HttpPost]
        public async Task<IActionResult> ProcessCheckout([FromBody] CheckoutDto model)
        {
            try
            {
                // Initialize Stripe API with your secret key
                StripeConfiguration.ApiKey = "your_stripe_secret_key";

                // Create a charge using Stripe API
                var options = new ChargeCreateOptions
                {
                    Amount = 1000, // Amount in cents
                    Currency = "usd",
                    Description = "Example charge",
                    Source = model.Token, // Token generated by Stripe.js
                };
                var service = new ChargeService();
                var charge = await service.CreateAsync(options);

                // Handle successful payment
                // You can save the payment details in your database or perform other actions

                return Ok("Payment successful");
            }
            catch (StripeException ex)
            {
                // Handle Stripe-specific errors
                return BadRequest($"Stripe Error: {ex.Message}");
            }
            catch (Exception ex)
            {
                // Handle other errors
                return StatusCode(500, $"Internal Server Error: {ex.Message}");
            }
        }
    }
}
